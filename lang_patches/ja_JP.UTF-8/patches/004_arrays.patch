2c2
< // Let's learn some array basics. Arrays are declared with:
---
> // 配列の基本を学びましょう。配列は次のように宣言します。
6,8c6,8
< // When Zig can infer the size of the array, you can use '_' for the
< // size. You can also let Zig infer the type of the value so the
< // declaration is much less verbose.
---
> // Zig が配列の大きさを推測できるときは、'_' をサイズ指定に使用できます。
> // そうすることでZigにサイズをを推測させることもでき
> // 宣言がより冗長にならずに済みます。
12c12
< // Get values of an array using array[index] notation:
---
> // array[index]記法で配列の値を取得します。
16c16
< // Set values of an array using array[index] notation:
---
> // array[index] 表記で配列の値を設定します。
20c20
< // Get the length of an array using the len property:
---
> // len プロパティを使用して配列の長さを取得します。
27,29c27,29
<     // (Problem 1)
<     // This "const" is going to cause a problem later - can you see what it is?
<     // How do we fix it?
---
>     // (問題 1)
>     // この "const "は、後で問題を引き起こします。
>     // どうすれば直りますか？
32,33c32,33
<     // Individual values can be set with '[]' notation.
<     // Example: This line changes the first prime to 2 (which is correct):
---
>     // 個々の値は'[]'表記で設定することができる。
>     // 例: この行は最初の素数を 2 に変更する（これは正しい）。
36,37c36,37
<     // Individual values can also be accessed with '[]' notation.
<     // Example: This line stores the first prime in "first":
---
>     // 個々の値には'[]'表記でアクセスすることもできる。
>     // 例: この行では、最初の素数を "first "に格納しています。
40,42c40,42
<     // (Problem 2)
<     // Looks like we need to complete this expression. Use the example
<     // above to set "fourth" to the fourth element of the some_primes array:
---
>     // (問題 2)
>     // この式を完成させる必要があるようです。上の例を使って
>     // "fourth" を some_primes 配列の 4 番目の要素に設定します。
45,46c45,46
<     // (Problem 3)
<     // Use the len property to get the length of the array:
---
>     // (問題 3)
>     // len プロパティを使用して配列の長さを取得します。
