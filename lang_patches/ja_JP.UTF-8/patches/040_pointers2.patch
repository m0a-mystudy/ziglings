2,3c2,3
< // It's important to note that variable pointers and constant pointers
< // are different types.
---
> // 注意すべきは、変数ポインタと定数ポインタは
> // は異なる型であることに注意が必要です。
5c5
< // Given:
---
> // 以下のように宣言されているとします。
10c10
< // Then:
---
> // その場合
12,18c12,13
< //     &foo is of type "*u8"
< //     &bar is of type "*const u8"
< //
< // You can always make a constant pointer to a variable, but you cannot
< // make a variable pointer to a constant. This sounds like a logic puzzle,
< // but it just means that once data is declared immutable, you can't
< // coerce it to a mutable type. It's a safety thing (to prevent mistakes).
---
> //     &foo は "*u8" 型である。
> //     &bar は "*const u8" 型である。
19a15,19
> // 変数への定数ポインタは常に作成可能ですが、定数への変数ポインタは作成できません。
> // これは論理パズルのように聞こえる。
> // しかし、これは、いったんデータが不変であると宣言されると、 
> // 変数へのポインタを強制することはできない、ということを意味しています。
> // これは安全性のため（間違いを防ぐため）です。
24c24
<     const b: *u8 = &a; // fix this!
---
>     const b: *u8 = &a; // 直して！
