2,4c2,4
< // Now let's create a function that takes a parameter. Here's an
< // example that takes two parameters. As you can see, parameters
< // are declared just like any other types ("name": "type"):
---
> // それでは、パラメータを受け取る関数を作ってみましょう。以下は
> // 2つのパラメータを受け取る例です。見ての通り、パラメータは
> // 他の型（"name": "type"）と同じように宣言されています。
21,23c21,23
< // Please give this function the correct input parameter(s).
< // You'll need to figure out the parameter name and type that we're
< // expecting. The output type has already been specified for you.
---
> // この関数に正しい入力パラメータ（複数可）を与えてください。
> // 我々が期待するパラメータ名と型を把握する必要があります。
> // 我々が期待しているパラメータ名と型を把握する必要があります。出力タイプはすでに指定されています。
27,29c27,29
<     // std.math.pow(type, a, b) takes a numeric type and two
<     // numbers of that type (or that can coerce to that type) and
<     // returns "a to the power of b" as that same numeric type.
---
>     // std.math.pow(type, a, b) は，数値型と 2 つの数値を受け取ります．
>     // その型の数値（またはその型を強制することができる数値）を受け取り
>     // "aのb乗"を同じ数値型として返します。
