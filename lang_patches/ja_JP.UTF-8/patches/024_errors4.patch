2,6c2,3
< // Using `catch` to replace an error with a default value is a bit
< // of a blunt instrument since it doesn't matter what the error is.
< //
< // Catch lets us capture the error value and perform additional
< // actions with this form:
---
> // エラーをデフォルト値に置き換えるために `catch` を使用することは、
> // エラーが何であるかが重要ではないので、少し乱暴な手段です。
7a5,7
> // catch を使用すると、エラー値をキャプチャして、このフォームで
> // 追加のアクションを実行できます。
> // 
22,23c22,23
<     // The "catch 0" below is a temporary hack to deal with
<     // makeJustRight()'s returned error union (for now).
---
>     // 以下の「catch 0」は、makeJustRight()が返したエラーユニオンに対処するための
>     // 一時的なハックです(今のところ)。
31,32c31,32
< // In this silly example we've split the responsibility of making
< // a number just right into four (!) functions:
---
> // この愚かな例では、数を正しく作る責任を
> // 4つの関数に分割しています。
34,37c34,37
< //     makeJustRight()   Calls fixTooBig(), cannot fix any errors.
< //     fixTooBig()       Calls fixTooSmall(), fixes TooBig errors.
< //     fixTooSmall()     Calls detectProblems(), fixes TooSmall errors.
< //     detectProblems()  Returns the number or an error.
---
> //     makeJustRight()   fixTooBig() を呼び出し、エラーを修正することはできない。
> //     fixTooBig()       fixTooSmall() を呼び出し、TooBigエラーを修正する。
> //     fixTooSmall()     detectProblems() をコールし、小さすぎるエラーを修正する。
> //     detectProblems()  数値またはエラーを返します。
56,57c56,57
<     // Oh dear, this is missing a lot! But don't worry, it's nearly
<     // identical to fixTooBig() above.
---
>     // やれやれ、これでは足りないですねぇ。でも心配しないでください、これはほとんど
>     // 上の fixTooBig() と同じです。
59,61c59,61
<     // If we get a TooSmall error, we should return 10.
<     // If we get any other error, we should return that error.
<     // Otherwise, we return the u32 number.
---
>     // TooSmall エラーが発生したら、10 を返すようにします。
>     // その他のエラーが発生した場合は、そのエラーを返します。
>     // それ以外の場合は、u32 の数値を返します。
