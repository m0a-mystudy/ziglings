2,4c2,4
< // We've seen that Zig implicitly performs some evaluations at
< // compile time. But sometimes you'll want to explicitly request
< // compile time evaluation. For that, we have a new keyword:
---
> // Zigはコンパイル時に暗黙のうちにいくつかの評価を行うことを見てきました。
> // しかし、時には、明示的にコンパイル時の評価を要求したいこともあるでしょう。
> // そのために、新しいキーワードを用意しました。
12,14c12,13
< // When placed before a variable declaration, 'comptime'
< // guarantees that every usage of that variable will be performed
< // at compile time.
---
> // 変数宣言の前に置かれた 'comptime' は、
> // その変数のすべての使用法がコンパイル時に実行されることを保証する。
16c15,16
< // As a simple example, compare these two statements:
---
> //
> // 簡単な例として、以下の2つの文を比べてみてください。
21,29c21,28
< // The first one gives us an error because Zig assumes mutable
< // identifiers (declared with 'var') will be used at runtime and
< // we have not assigned a runtime type (like u8 or f32). Trying
< // to use a comptime_int of undetermined size at runtime is
< // a MEMORY CRIME and you are UNDER ARREST.
< //
< // The second one is okay because we've told Zig that 'bar2' is
< // a compile time variable. Zig will help us ensure this is true
< // and let us know if we make a mistake.
---
> // なぜなら、Zig は変更可能な識別子
> // (var で宣言されたもの)がランタイムに使用されると仮定しており、
> // ランタイムの型(u8 や f32 など)が割り当てられていないからです。
> // 実行時にサイズが確定していない comptime_int を使おうとすると、
> // MEMORY CRIME となり、逮捕されます。
> //
> // 2つ目は、'bar2'がコンパイル時変数であることをZigに伝えたので大丈夫です。
> // Zigはこれが正しいことを確認し、間違いがあれば教えてくれる。
35,36c34,35
<     // In this contrived example, we've decided to allocate some
<     // arrays using a variable count! But something's missing...
---
>     // この奇妙な例では，変数 count を使って配列を割り当てることにしました．
>     // しかし、何かが足りません...
54c53
<     // Builtin BONUS!
---
>     // 組み込みBONUS!
56,59c55,58
<     // The @compileLog() builtin is like a print statement that
<     // ONLY operates at compile time. The Zig compiler treats
<     // @compileLog() calls as errors, so you'll want to use them
<     // temporarily to debug compile time logic.
---
>     // 組み込み関数compileLog()は、コンパイル時にのみ動作する
>     // print文のようなものです。
>     // Zigコンパイラは@compileLog()の呼び出しをエラーとして扱うので、
>     // コンパイル時のロジックをデバッグするために一時的に使用することになります。
61,62c60,61
<     // Try uncommenting this line and playing around with it
<     // (copy it, move it) to see what it does:
---
>     // この行をアンコメントして、いろいろと弄ってみてください。
>     // (コピーしたり、移動したり) してみてください。
